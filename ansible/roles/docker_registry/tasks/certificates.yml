---
- name: Install pyOpenSSL dependancies
  apt:
    name:
      - python3-pip
      - gcc
      - rustc
      - libssl-dev
    update_cache: yes
  when: "'managers' in group_names"

- name: Install python-pyOpenSSL
  pip:
    name:
      - pyOpenSSL
    state: present
  when: "'managers' in group_names"


- name: "Creating multiple folders without disturbing previous permissions"
  file:
    path: "{{ item }}"
    state: directory
    recurse: true
  loop:
  - /opt/registry/
  - /opt/registry/certs/
  - /opt/registry/data/
  when: "'managers' in group_names"

- name : Create private key
  openssl_privatekey:
    path: /opt/registry/certs/registry.mybooking.services.pem
  when: "'managers' in group_names"

- name: Generate an OpenSSL Certificate Signing Request
  openssl_csr:
    path: /opt/registry/certs/registry.mybooking.services.csr
    privatekey_path: /opt/registry/certs/registry.mybooking.services.pem
    common_name: registry.mybooking.services
  when: "'managers' in group_names"

- name: Generate a Self Signed OpenSSL certificate
  openssl_certificate:
    path: /opt/registry/certs/registry.mybooking.services.crt
    privatekey_path: /opt/registry/certs/registry.mybooking.services.pem
    csr_path: /opt/registry/certs/registry.mybooking.services.csr
    provider: selfsigned
  when: "'managers' in group_names"

- name: Grab generated cert to localhost
  fetch:
    src: /opt/registry/certs/registry.mybooking.services.crt
    dest: /tmp/registry.mybooking.services.crt
    flat: true
  when: "'managers' in group_names"

- name: Create certs dir for registry for all members of the cluster
  file:
    path: "/etc/docker/certs.d/registry.mybooking.services:5000/"
    state: directory
    recurse: true

- name: Export cert to all members of the cluster
  copy:
    src: /tmp/registry.mybooking.services.crt
    dest: /etc/docker/certs.d/registry.mybooking.services:5000/registry.mybooking.services.crt
